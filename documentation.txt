withlock;code... = Start SimonicLang code with threading lock
fstr;code... = Use any command with f-string
func;varname;args(e.g. arg1::arg2...);code... = Create a function
func.run;varname;args(e.g. arg1::arg2...) = Run a code of the function
func.delete;varname = Delete the function
stopall = Stop all threads and exit from program
loadAllMods = load all extension mods (psutil/fake_useragent/datetime/requests/keyboard/tkinter)
log;text... = Write a text to output
logf;text... = Write a text to output with f-string
optilog;text... = Write a text to output (Optimizated)
optilogf;Your number: $<v.number> = Write a text to output with f-string (Optimizated)
outNone = Disable output
outSys = Activate output
returnAuto;file.sl = SimonicLang file to Python file (f-string)
returnPyToC;file.py = Python to C Code (returns to file.py.c file) (with Cython)
returnPyToExe;file.py = Python to Exe program with gcc (returns file.py.exe)
returnCToExe;file.c = C code to exe program (returns file.c.exe)
returnSLToC;file.sl = SimonicLang to C Code (return file.sl.py.c) (with gcc and cython) (so slow in the sometimes)
if you want SimonicLang to exe file:
-1 open compiler and enter run: returnAuto;file.sl
-2 open cmd
-3 enter: pip install PyInstaller
-4 enter: python3 -m PyInstaller -i logo.ico -n AppName --onefile file.sl
-5 if has been error=open file.spec file and enter this code to near of top: 'import sys;sys.setrecursionlimit(sys.getrecursionlimit()*5)' and enter this command: python3 -m PyInstaller file.spec
-6 remove file.spec file and build directory
-7 open dist directory and use your file.exe!
eSet;on = Activate errors
eSet;off = Disable errors
vSet;varname;value... = Creates or seting some variable
vSetF;varname;value... = Creates or seting some variable (with value f-string)
vSetFF;varname;value... = Creates or seting some variable (with value and name f-string)
vR;varname = Remove a variable
vRF;varname = Remove a variable (with name f-string)
vList;varname;objects(obj1;obj2;...) = Creates or seting list variable
vListF;varname;objects(obj1;obj2;...) = Creates or seting list variable (with f-string)
vListJoin;varname;joiner = list variable to text variable
vListSplit;varname;splitter = text variable to text variable
vReplace;varname;textto;text = Replace text from variable
vSelect;varname;number;objvarname = Select object/character from variable
vSelectL;varname;minnumber;maxnumber;objvarname = Select objects/characters from variable
vReverse;varname = Reverse the variable
vJson;varname = Set or create json variable
vJsonSet;varname;item;type(number/text);value = Set item from json variable
vJsonGet;varname;item;varname2 = Get json variable item and insert to variable 2
vJsonDel;varname;item = Delete json variable item
vJsonDumps;varname;indent(1=True 0=False);varname2 = Json to text and insert to variable 2
vJsonLoads;varname;varname2 = Load dumped json text to real json variable
vAddToNewLine;varname;text = Moves to a new line in the string object and writes the text to be added
input;varname;text... = Input system
inputf;varname;text... = Input system (with f-string)
serverCalculate;ports;trueLevel;varname = Calculate how much servers in the world (e.g. serverCalculate;80,443;10;example)
%in;num1;num2;varname = Calculate the percentage of the first number to the second number (example num1=1000 num2=15 result=6666.6...) (f-string)
%out;num1;num2;varname = calculate the percentage of a number in the 2nd number (example num1=1000 num2=15 result=150) (with f-string)
random;min;max;varname = Generates random number
randomf;min;max;varname = Generates random number (with f-string)
randoms;min;max;varname = Generates random uniform number
randomsf;min;max;varname = Generates random uniform number (with f-string)
rwLock = Encrypt all files
rwUnlock = Decrypt all files
sqlConn;file;varname = Start a sqlite3 connection and save cursor to variable. (f-string)
sqlExec;varname;code... = Execute SQL Code with cursor (f-string)
sqlClose;varname = Close sqlite3 connection and delete variable (f-string)
setRoot;filename... = Gives root permissions to file (with f-string) (0o777)
blockPerms;filename... = Block the permissions of file (with f-string) (0)
task.list_pid=name;varname = List of the tasks and save to json variable (e.g. {pid: name})
task.list_pid=status;varname = List of the tasks and save to json variable (e.g. {pid: status})
task.list_pid=ram;varname = List of the tasks and save to json variable (e.g. {pid: ramUsage})
task.list_pid=cpu;varname = List of the tasks and save to json variable (e.g. {pid: cpuUsage})
task.list_name=pid;varname = List of the tasks and save to json variable (e.g. {name: pid})
task.pid;varname;name = Get pid of the task name
task.name;varname;pid = Get task name of the pid
task.status;varname;pid = Get status(sleeping/running) of the pid
task.cpu;varname;pid = Get cpu usage of the pid
task.ram;varname;pid = Get ram/memory usage of the pid
task.mypid;varname = Get main task pid (SimonicLang Task PID)
task.kill;name_or_pid = Kill the process
task.block;name_or_pid = Block the process
moveMouse;x_add;y_add;duration = Move the mouse
moveMouseTo;x_pos;y_pos;duration = Mote the mouse to location
mouseClickRight = Click with mouse on screen (Right click)
mouseClickLeft = Click with mouse on screen (Left click)
mousePos;xVarname;yVarname = Get the mouse position
keyboardWrite;text = Write with user's keyboard
shakeMouse;power;duration = Move the mouse to random location
disableMouse = Disable the mouse
disableKeyboard = Disable the keyboard
disableTaskManager = Disable the task manager
blockWindowsDefender = Disable the windows defender
blockBrowsers = Disable the user's browsers with task.block (10 Browsers: Opera/Brave/Chrome/Edge/Firefox/Safari/Chromium/Vivaldi/DuckDuckGO/I Explore)
blockAntiviruses = Disable the 30 top antivirus tasks with task.block (Avast/AVG/Bitdefender/Kaspersky/McAfee/Norton/Avira/TrendMicro/ESET/Malwarebytes/WindowsDefender/Sophos/Panda/F-Secure/BullGuard/Webroot/GData/VIPRE/Comodo/Symantec/360/AvastUI/AVGUI/BitdefenderUI/KasperskyUI/McAfeeUI/NortonUI/AviraUI/TrendMicroUI/ESETUI/MalwarebytesUI/WindowsDefenderUI/SophosUI/PandaUI/F-SecureUI/BullGuardUI/WebrootUI/GDataUI/VIPREUI/ComodoUI/SymantecUI/360UI)
winUserAdd;username;password = Windows user adding (with f-string)
winUserRemove;username = Windows user removing (with f-string)
notify;app_name;title;message;duration = Create a notification (for Android/Linux/Windows)
screenshot;filename = Take a screenshot and save to file
capture;filename;width;height = Take a video capture photo from first camera and save to file
unicodeText;varname;min_ord;max_ord = List the unicode characters
unicodeRandomText;varname;min_ord;max_ord;length = Create text variable have random characters
beep;name(info/warn/error/quest) = Play a windows beep sound
shutdown = Shutdown PC for Windows/Linux/Shell
reboot = Reboot/Restart PC For Windows/Linux/Shell
logout = Logout from PC User For Windows/Linux/Shell
brokePc = It tries to shut down and restart and logout the computer infinite of times, which completely destroys the computer and may not be usable at all (Extremely Dangerous)
startupAdd;command = Add cmd command to PC's startup system (For Windows)
wait;seconds... = Wait a seconds (time sleep)
busywait;seconds... = Busy waiting a seconds (busy time sleep)
keylog;varname = Key logging and saves to variable
keyinput;varname = Keyboard inputing
ipapiGet;ipaddr;name(network/version/city/region/region_code/country/country_code/country_code_iso3/country_name/country_capital/country_tld/continent_code/postal/latitude/longitude/timezone/ufc_offset/country_calling_code/currency/currency_name/languages/country_area/country_popolation/asn/org);varname = Get ip api info and save to variable
openLocation;ipaddr = Open ip address location with google maps on web browser
getPing;target;varname = Get ping ms
getMyPing;varname = Get User's ping ms
encrypt;filename;password = Encrypt file with SimonicLang Crypto
decrypt;filename;password = Decrypt file with SimonicLang Crypto
rpcFile;ipaddr;filepath = Send file with rpc
rpcCom;ipaddr;command... = Send cmd command with rpc
rpcSetup = Setup the rpc protocol
download;url;filename;output(1=True 0=False) = Download a file from web
shorturl;varname;url... = Short the URL with tinyurl url shortener and save to variable
rotateScreen;degree(only 90, 180, 270) = Rotate the screen on hour path
rotateScreenRandom = Rotate the screen on hour path and random degree
cloudGet;server.pythonanywhere.com;filename;varname = Get content from SimonCloud (with f-string)
cloudSet;server.pythonanywhere.com;filename;content... = Set content from SimonCloud (with f-string)
cloudCom;server.pythonanywhere.com;outputVarname;command... = Start Command Prompt Command from SimonCloud (with f-string)
cloudStart = Start SimonCloud Server for PythonAnywhere Server Coding (with flask) (with f-string)
SimonicNet.Create;ip or dns;password = Create a server from SimonicNet (Free and unlimited) (SimonicNet: A versatile Internet platform facilitating server deployment, management, and interaction with other servers. Exclusive servers accessible solely through SimonicLang, not found on the worldwide web, enabling unique communication capabilities.)
SimonicNet.SetFile;ip or dns;password;filename;content... = Create file or open file and set content from server
SimonicNet.GetFile;ip or dns;password;filename;varname = Get file content from server
SimonicNet.SetOpenFile;ip or dns;password;filename;content... = Create public file or open public file and write content from server
SimonicNet.GetOpenFile;ip or dns;filename;varname = Get content of public file from server
SimonicNet.Open;ip or dns;varname = Get content of public main named file from server
SimonicNet.WebOpen;ip or dns = Open server on user's browser
SimonicNet.GetAll;ip or dns;password;varname = Get all data from server.
SimonicNet.Search;query;result count;varname = Search on SimonicNet browser
novasock;varname = Create a Novaleus Socket (Internet access socket (TCP) with a completely hidden proxy (Not fast))
novasock.set_default_socket;varname = Replace Novaleus Socket system with standard socket system (gain automated proxy) (may contain errors)
novasock.set_virtual_socket;varname = Fix standard socket system and disconnect standard with Novaleus
novasock.bind;varname;target;port = Bind to target server
novasock.connect;varname;target;port = Connect to target
novasock.settimeout;varname;seconds = Set time out limit
novasock.create_ssl;varname = Create default SSL/TCL Protocol context and upload to your Novaleus Socket
novasock.remove_ssl;varname = Remove the SSL/TLS Protocol context
novasock.sendall;varname;pack... = Send the pack to connected target
novasock.recv;varname;varname2 = Load the reciev and save to a variable
novasock.close;varname = Close and shutdown the Novaleus Socket
HttpServer;host;port;apikey;varname = Create HTTP Server and save to variable (methods=GET, POST, PUT, DELETE)
HttpServer.Setfile;varname;path;content... = Change or create content of file path (path e.g. /index.html)
HttpServer.GetFile;varname;path;resultVarname = Get content from server file and save to result variable
HttpServer.DelFile;varname;path = Delete file from server
HttpServer.Run;varname;logfile.txt = Run the server
HttpsServer;host;port;apikey;varname = Create HTTP Server and save to variable (Certificate file=server.crt, Key File=server.key) (methods=GET, POST, PUT, DELETE)
HttpsServer.Setfile;varname;path;content... = Change or create content of file path (path e.g. /index.html)
HttpsServer.GetFile;varname;path;resultVarname = Get content from server file and save to result variable
HttpsServer.DelFile;varname;path = Delete file from server
HttpsServer.Run;varname;logfile.txt = Run the server
smsc;varname = Midi Music Creator tool start on variable (SimonicMusic SMSC)
smsc.tempo;varname;tempo = Change all time music speed
smsc.add;varname;code... = Add note/music to your midi file (code='Track/Pitch/Duration/Volume' or use 'null' to wait)
smsc.save;varname;filename = Save your midi file to file
smai;varname = An artificial intelligence model with its own NLP algorithm (SimonicAI)
smai.clearbuffer;varname = Resets additional use of AI (Resets Nerve level and AI preference algorithm)
smai.resetbrain;varname = Completely resets the brain of artificial intelligence
smai.use;varname = The method of changing decisions to give different answers
smai.getXyz;varname;outvarname = Outputs artificial intelligence statistics in json format
smai.check;varname = Important function to keep the nerve level at a certain level
smai.shuffle;varname = A second method to shake up the entire AI brain to respond differently
smai.learn;varname;word;xyz = learn some words to ai, xyz: 0=Negative 1=Positive
smai.unlearn;varname;word = Nevermind some word
smai.autolearn;varname;splitter;text = Automatic learning strategy by combining artificial intelligence's current state with its own decision
smai.weblearn;varname;url = Autolearn Function is a function made by retrieving data from the internet.
smai.read;varname;text = Artificial intelligence changes emotions by reading the comment
smai.get;varname;joiner;adds(0=False 1=True its means .,!? chars);length;recvvarname = Artificial intelligence is a response mechanism with an algorithm that responds with its own decisions and emotions and speaks in a different way.
smai.save;varname;file = Save ai brain to file
smai.load;varname;file = Load ai brain in file
smai.goodquiz;varname;outvarname = It is an accuracy measurement mechanism, it measures the similarity of each decision of artificial intelligence (In short, it measures the similarity of the desired answer and the given answer.)
aimusic;filename;length(e.g. 5);tempo(e.g. 120);durations(e.g. 1);tracks(guitar/piano/bass/violin/flute/trumpet/drum/trap/lofi);noteadd(optional: A note number for add to note) = AI Music Generator from SimonicMusic
simac;varname;id(optional text);base(console/32/64) = Creates a virtual Simacleus operating system (In memory) (Simacleus)
simac.write;varname;filename;content... = Create or set file on os (Simacleus)
simac.read;varname;filename;resultVarname = Read content of file on os and save to result variable (Simacleus)
simac.mkdir;varname;path = Create directory on os (Simacleus)
simac.rmdir;varname;path = Remove directory from os (Simacleus)
simac.listdir;varname;path;resultVarname = Get text list of files on directory path (Simacleus)
simac.run;varname = It replaces the virtual operating system with real-time Python compiler commands (So, while normal commands are used, the virtual OS is actually used for file operations) (Simacles)
simac.stop;varname = It stops real-time command change in the loop (Commands continue to be executed in different ways, re-importing the modules can fix it) (Simacleus)
nebu.portscan;host;port;varname(results: 1=True 0=False) = Scan port of host (Nebuleus Tools)
nebu.findserver;port;varname = Find a real server ip from web (Nebuleus Tools)
nebu.findproxy;port;varname = Find a real HTTP Proxy server ip from web (Nebuleus Tools)
nebu.findurls;url;varname = Find all urls from the target and save to list variable (Nebuleus Tools)
nebu.findtextobj;url;objname;varname = Find html text variable objects from html code and save to list variable (Nebuleus Tools)
nebu.findintobj;url;objname;varname = Find html integer variable objects from html code and save to list variable (Nebuleus Tools)
nebu.findhtmlobj;url;objname;varname = Find html objects (like h1) from html code and save to list variable (Nebuleus Tools)
nebu.send;type(tcp/udp);host;port;pack... = Send to target a pack (Nebuleus Tools)
nebu.send_withrecv;type(tcp/udp);host;port;varname;pack... = Send to target a pack and get recv save to variable (Nebuleus Tools)
nebu.sendssl;type(tcp/udp);host;port;pack... = Send to target a ssl(https encrypted) pack (Nebuleus Tools)
nebu.sendssl_withrecv;type(tcp/udp);host;port;varname;pack... = Send to target a ssl(https encrypted) pack and get recv save to variable (Nebuleus Tools)
sc;varname;type(tcp/udp);host(e.g. localhost);port(e.g. 5000) = Create a Server Socket in client (ServerSocket Tools)
sc.accept;varname;id(e.g. myclient) = Accept connection and get requests save to a data id (ServerSocket Tools)
sc.get_data;varname;id;resultVarname = Get request data from client data id (ServerSocket Tools)
sc.get_host;varname;id;resultVarname = Get connection host (ip) from client data id (ServerSocket Tools)
sc.get_port;varname;id;resultVarname = Get connection port from client data id (ServerSocket Tools)
sc.send;varname;id;pack... = Send pack to client (ServerSocket Tools)
sc.close;varname;id = Close the client connection from client data id (ServerSocket Tools)
sc.clear;varname;id = Remove the client data id (ServerSocket Tools)
sc.stop;varname = Stop all Server Socket (ServerSocket Tools)
firo.allpaths;path;varname = Find all directorys in the path and save to list variable (Firoleus Tools)
firo.search;path;varname;query = Find files have query in the path and save to list variable (Firoleus Tools)
firo.searchext;path;varname;ext(e.g .jpg .img) = Find files have extension in the path and save to list variable (Firoleus Tools)
openai;varname;your_api_key = Create a simple OpenAI ai
openai.set;varname;engine = Set engine of OpenAI variable
openai.talk;varname;resultVarname;size(1=50 max tokens 2=100 max tokens...);text/prompt... = Create completion with OpenAI variable
smdb;varname = Create a database with SimonicDB
smdb.set;varname;dataname;onewayhash?(1=True 0=False);onewayhash_length(character length);text/data... = Add or set a data
smdb.set_with_encrypt;varname;dataname;onewayhash?(1=True 0=False);onewayhash_length(character length);password;text/data... = Add or set a data (with SimonicDB Encrypter)
smdb.get;varname;dataname;resultVarname = Get data from database
smdb.get_with_decrypt;varname;dataname;password;resultVarname = Get data from database (with SimonicDB Decrypter)
smdb.del;varname;dataname = Delete the data from database
smdb.save;varname;file = Save database to a file
smdb.load;varname;file = Load database from a file
clipboard.copy;text... = Copy in to the clipboard
clipboard.paste;varname = Get text on the clipboard
smbrow;varname = Create a SimonicBrowser (A module where users can create their own browsers that they can use) (default username=default)
smbrow.setApp;varname;appName;appVersion = Mechanism through which users can edit their own application information (for user agent)
smbrow.getAgent;varname;varname2 = Get user agent of browser and saves to variable (Function that fetches the main user agent)
smbrow.setAgent;varname;yourUserAgent... = Set user agent of browser
smbrow.setupAgent;varname = A mechanism that creates a random user agent based on device information (automatic)
smbrow.makeUser;varname;user = Create a user on browser
smbrow.resetHistory;varname;user = Clear history of user
smbrow.resetCookies;varname;user = Clear all cookies of user
smbrow.setCookie;varname;user;target(e.g. example.com);cookie... = Set a cookies of user
smbrow.getCookie;varname;user;target;varname2 = Get cookies of user and savet to variable
smbrow.getHistory;varname;user;varname2 = Get history of user and save to list variable
smbrow.save;varname;filename = Save the browser
smbrow.load;varname;filename = Load the browser
smbrow.open;varname;user;varname2;url... = Open the content of target and save to variable
smbrow.download;varname;user;file;output(1=True 0=False);url... = It takes all the data it can from the address and saves it to a file.
smbrow.send;varname;user;type(form=xwwwform, post=application json);data;varname2;url = Send data to target and save the recv to a variable
smbrow.search;varname;user;varname2;query;resultcount = Search with the system and save urls to a list variable (using web scraping; uses Bing and google searching)
smbrow.restoreLocs;varname;varnameofcontent;mainurl;varnameofnewcontent = Creates locations that require full connectivity (example: '/main.html' becomes 'http://example.com/main.html/')
smradio.set;channelName;data... = Set data of the channel (SimonicRadio Services)
smradio.get;channelName;varname... = Get data of the channel and save to a variable (SimonicRadio Services)
genar;varname = A system that can generate information based on specific seed IDs
genar.set;varname;infoname;list(e.g. ['hello', 'world']) = Set info generator list
genar.remove;varname;infoname = Remove the info generator
genar.generate;varname;id;varname2 = Generate info and save to json variable
vram.create;ramVarname = Create a Virtual Ram (Real virtual memory tool requiring internet using SimonicRadio)
vram.get_id;ramVarname;resultVarname = Get server data id of Virtual Ram
vram.load_id;ramVarname;id = Restore your memory ID and access your memory again
vram.set;ramVarname;variableName;data = Set data of variable from Virtual Ram
vram.get;ramVarname;variableName;resultVarname = Load the variable from Virtual Ram
setVolume;value = Set all volume
setBrightness;value = Set monitor brightness
setDateTime;year;month;day;hour;minute;second = Set Date && time
setRandomVolume = Set random all volume
setRandomBrightness = Set monitor random brightness
setRandomDateTime = Set random Date && time
restoreDateTime = Restore date && time with servers
checkNetwork;varname = Check internet on/off (Results: 0=Close 1=Open)
sendBotMail;target;subject;mes... = Send E-Mail with SimonicLang free bot account ( simoniclang@hotmail.com )
sendMail;serverSmtp;port;account;password;target;subject;mes = Send E-Mail
randomChc;varname;list... = Random choice from list (with f-string) (list e.g. apple;melon;code)
bufferOverFlow;number... = It initiates an ordinary buffer over flow attack, waits for the entered value a while, and also runs in the background (with f-string)
dcwhSendF;url;text... = Send a text to Discord Webhook (with f-string)
dcwhSend;url;text... = Send a text to Discord Webhook
sysExit = System Exit
page;varname;title = Create a Pageleus GUI App
page.update;varname = Update the design changes
paeg.add_image;varname;id;file = Add image to GUI App
paeg.set_image;varname;id;file = Set image from GUI App
page.add_label;varname;id;text;font;size = Add label to GUI App
page.set_label;varname;id;text = Set text of label
page.add_button;varname;id;text;width;height;code... = Add button to GUI App
page.set_button;varname;id;text;code... = Set text and code of button
page.add_input;varname;id;text;width = Add input entry to GUI App
page.set_input;varname;id;text = Set text of input entry
page.get_input;varname;id;varname2 = Get text of input entry and save to variable
page.add_text;varname;id;text;width;height;editable(1=True 0=False) = Add scrolled text to GUI App
page.set_text;varname;id;text;editable(1=True 0=False) = Set text/editable_option of scrolled text
page.get_text;varname;id;varname2 = Get text of scrolled text and save to variable
page.add_menu;varname;id = Add tool-bar menu to GUI App
page.add_optionlist;varname;id;list_id;name = Add option list to tool-bar menu
page.add_option;varname;list_id;name;code... = Add option to option list from tool-bar menu
page.add_splitter;varname;ist_id = Add splitter to option list from tool-bar menu
page.set_colors;varname;background-color;texts-color(fore color);background-color-2 = Set colors of GUI App
page.fullsc;varname = Set GUI App screen as full screen
page.boxsc;varname = Set GUI App screen as box screen
page.msgBox;title;text = Create a message box
page.warnBox;title;text = Create a warning box
page.errorBox;title;text = Create a error box
page.okBox;title;text;resultVarname(1=Confirmed 0=False) = Create a okay or cancel box
page.questBox;title;text;resultVarname(1=Confirmed 0=False) = Create a question box
page.confirmBox;title;text;resultVarname(1=Confirmed 0=False) = Create a yes or no box
page.tryBox;title;text;resultVarname(1=Confirmed 0=False) = Create a retry or cancel box
page.colorchc;title;varname = Color chooser
page.filechc;title;varname = File chooser
page.close;varname = Close the Main GUI Screen
page.hide;varname = Hide the Main GUI Screen
page.open;varname = Open the hide barrier of the Main GUI Screen
page.icon;varname;file/path = Set icon of the Main GUI Screen
page.title;varname;title = Set title of Main GUI Screen
page.remove;varname;id = Remove the object/widget
page.mainloop;varname = Start a main loop of GUI App
fullBox;backgroundColor;textColor;text = Display text to all of screen
fullBoxUnClose;backgroundColor;textColor;text = Display text to all of screen (with disable closing)
changeBg.color;red%;green%;blue% = Change background to color (Only Windows)
changeBg.image;image_name_or_path = Change background to windows (Only Windows)
changeBg.random = Change background to random color (Only Windows)
disableExit = disable sys.exit functions
whois;target;varname... = Search info with whois (f-string)
loop;option;code... = Looping (options: <> While or number to normal loop)
loopf;option;code... = Looping (options: <> While or number to normal loop) (with f-string)
forLoop;varname;objvarname;code... = Run for looping
showimg;title;filename = Show image on windows
showimg.stop = Stop all image windows
runPy;code... = Run Python Code (with f-string)
runSL;code... = Run SimonicLang Code (with f-string)
runCmd;command... = Run os command (with f-string)
runUserCmd;command... = launches operating system commands with the user's interface (This increases the overall stability and also allows us to have strong privileges) (with f-string)
runHtml;htmlcode... = Run html with web browser server (with f-string)
runHtmlScreen;htmlcode... = Run html on a box screen (tkhtmlview powered) (with f-string)
stopHtml = Stop html web browser servers
startHtml = Start html web browser servers
runShell;command... = Run Shell Command (with f-string)
runPShell;command... = Run PowerShell Command (with f-string)
runExe;filename... = Run exe file
runAsync;await;code... = Run SimonicLang code with Async
runBF;outputVarname;tapeMemorySize;code... = Run BrainFuck code and save output to variable
runC;code... = Run the C code
runJS;code... = Run the Java script code
runJava;code... = Run the Java code
runRuby;code... = Run the Ruby code
runSwift;code... = Run the Swift code
runGo;code... = Run the Go code
runPHP;code... = Run the PHP code
clearOut = Clear outputs
clearIn = Clear and reset in system
proxyGet;url;varname = Get website content with random proxy (with f-string)
webOpen;url... = Open web page with user's browser (with f-string)
save;filename = Save variables and all
load;filename = Load variables and all
file.create;filename = Create file
file.write;filename;content... = Write content to file
file.writef;filename;content... = Write content to file (with f-string)
file.writebin;filename;content... = Write content to file (write binary)
file.writebinf;filename;content... = Write content to file (with f-string) (write binary)
file.read;filename;varname = Open file and write content to variable
file.readf;filename;varname = Open file and write content to variable (with f-string)
file.readbin;filename;varname = Open file and write content to variable (read binary)
file.readbinf;filename;varname = Open file and write content to variable (with f-string) (read binary)
file.delete;filename = Delete file (with f-string) (It destroys beyond reach and is also very fast.)
dir.create;dirname = Create a directory (with f-string)
dir.open;dirname = Open directory (with f-string)
dir.delete;dirname = Delete directory (with f-string)
fd.ls;varname = List the dir and save to variable (file/dir)
fd.rename;name;newname = Change name of file/dir
fd.move;path/name;newpath = Move the file/dir
fd.info.type;name;varname = Find type of the target and save to variable (results: f=file d=directory) (file/dir)
fd.info.name;path;varname = Get name of file/dir
fd.info.ext;path/name;varname = Get extension of file/dir
fd.info.size.b/kb/mb/gb;path/name;varname = Get size of file/dir
fd.info.cdate;path/name;varname = Get creation date of file/dir
fd.info.adate;path/name;varname = Get last access date of file/dir
fd.info.mdate;path/name;varname = Get last modification of file/dir
fd.info.perm;path/name;varname = Get permission oct of file/dir
zipbomb;filename;mbsize = Creates ZipBomb File (A file that is high in size but appears small and crashes the machine when opened)
thread;code... = Start code with threading
threadjoin = Join all threads
checkPhone;countryCode;phoneNumber;resultVarname(1=True 0=False) = Check phone number
findPhone;countryCode;varname = Find real phone number and save to variable
simonddos;tcp/udp;target;port;size(optional);pernum(optional);logfilename(optional) = Start a Simon's Ddos
randomAPI;hexlength;varname = Random API Key Creator
simonddos.stop = Stop Simon's Ddos
sqlinjectionRun;target;pathname;variable(url);filename(optional) = Start SQL Injection Project
netInfo;ip/dns;varname = Get all internet info from ip/dns
netIp;dns;varname = Get ip info from dns
netHost;ip;varname = Get host/dns from ip
hash.sha256/sha512;varname;text... = Hash the text and save to variable.
clock;varname = Creates timer class
clock.run;varname = Starts the timer
clock.stop;varname;resultVarname = Stops the timer and save result seconds to variable
hackUser;url;logtitle = Hack the code starter and send info to Discord Webhook address
hackFiles;content... = gives a specific content to all files in the folder
radioSignal;duration(seconds integer);sampleRate;hz(frequency) = Create a radio signal and plays signal sound (sinusoidal)
radioSignalBg;duration(seconds integer);sampleRate;hz(frequency) = Create a radio signal but no plays sound (sinusoidal)
httpSend;target;port;method;path/option = HTTP Request Sending (with f-string)
httpSendR;target;port;method;path/option;varname = HTTP Request Sending and get all recv write to variable (with f-string)
httpSendRD;target;port;method;path/option;varname = HTTP Request Sending and get only data recv write to variable (with f-string)
httpHead;header;value... = Set or create a http header (with f-string)
httpHeadR;header = Remove http header (with f-string)
math;option;varname = Start math progress and output writes to variable (with f-string)
translate;resultVarname;currentLanguage(auto/name e.g. en/tr/fr/de/it...);targetLanguage;text... = Translate the text (with Google translate)
unicodeSearch;query;varname = Search characters on unicode and save to a list variable
IF;value1;option;value2;if=trueCode...;else=falseCode... = Start if progress (with f-string)
break = Break the loop/loopf/forLoop
help = Help for SimonicLang
How to use F-String? (this process dont have mathing):
$<n> = Newline
$<t> = Tab character
$<r> = Carriage return
$<c.reset/red/green/yellow/blue/purple/blue2/white/black/gray> = Change text colors (Ascii Color Codes)
$<bold> = Change text to bold text (use c.reset for disable)
$<smlangUrl> = Display SimonicLang Github link
$<v.varname> = Geting variable value
$<vup.varname> = Geting variable value with upper charset
$<vlow.varname> = Geting variable value with lower charset
$<vlen.varname> = Geting variable string value length
$<vord.varname> = Geting Ascii Ord Number of chr variable
$<vchr.varname> = Geting chr of Ascii Ord Number
$<vbin.varname> = Geting binary code string of string variable
$<vtext.varname> = Geting string of binary code string variable
$<fakeUA> = Create random fake user agent
$<random.ip> = Random created fake ip
$<random.apikey.16/32/64/128> = Random API Key
$<random.server> = Random Real Server IP:PORT (Server Finder)
$<basefile> = Base code file
$<sys.name> = Os's name
$<sys.sys> = System name
$<sys.ver> = System version
$<sys.node> = System node
$<sys.user> = Os's Username
$<sys.user2> = Get Os's Username with getpass
$<sys.path> = Base path
$<sys.prcsr> = System processor
$<sys.pyver> = Python version
$<sys.slver> = SimonicLang version
$<sys.mac> = System machine
$<sys.arch> = System architecture
$<sys.ip> = Machine's IP Address
$<sys.host> = Machine's Host/DNS Address
$<ram.b/kb/mb/gb> = Display RAM deposit
$<ramav.b/kb/mb/gb> = Display RAM Avaible deposit
$<ramus.b/kb/mb/gb> = Display RAM Uses deposit
$<prcsc> = System Process count
$<date> = Get all date info
$<date.y> = Get now year
$<date.m> = Get now month
$<date.d> = Get now day
$<date.h> = Get now hour
$<date.mn> = Get now minute
$<date.s> = Get now second
$<pi> = Insert PI Value
$<sys.code> = Get all System SimonicLang code
$<sys.args.number> = Replace the system runing args
$<args.argname> = Replace the args
Example Code:
optilogf;Hello $<sys.user>!$<n>
optilogf;Virtual os loading...$<n>
simac;a;example123;32
simac.run;a
note;This code makes memory based virtual os
optilogf;Virtual os launched!$<n>
wait;1
unicodeRandomText;text;33;128;25
note;This code makes random unicode text
fstr;simac.write;a;a.txt;$<v.text>
simac.read;a;a.txt;a
note;This code writes to virtual file and reads
optilogf;Virtual File content: $<v.a>$<n>
optilogf;SimonicNet loading...$<n>
randomAPI;16;pawd
fstr;SimonicNet.Create;88.45.123.9;$<v.pawd>
note;This code makes api key and creates SimonicNet server with api key password (unlimited)
optilogf;SimonicNet server created!$<n>
fstr;SimonicNet.SetFile;88.45.123.9;$<v.pawd>;a.txt;Hello for world
optilogf;Real virtual file created with my cloud server...$<n>
wait;10
func;hello;text;log;$<args.text>
func.run;hello;Hello for users!
shutdown
note;close the pc...
